name: CI

on: [push, pull_request]

env:
  DEVELOPER: 1

jobs:
  windows-build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: git-for-windows/setup-git-for-windows-sdk@v1
    - name: build
      shell: bash
      env:
        HOME: ${{runner.workspace}}
        NO_PERL: 1
      run: . /etc/profile && ci/make-test-artifacts.sh artifacts
    - name: zip up tracked files
      run: git archive -o artifacts/tracked.tar.gz HEAD
    - name: upload tracked files and build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: windows-artifacts
        path: artifacts
  windows-test:
    name: win test
    runs-on: windows-latest
    needs: [windows-build]
    strategy:
      fail-fast: false
      matrix:
        nr: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        use-busybox: [false, true]
    steps:
    - name: download tracked files and build artifacts
      uses: actions/download-artifact@v2
      with:
        name: windows-artifacts
        path: ${{github.workspace}}
    - name: extract tracked files and build artifacts
      shell: bash
      run: tar xf artifacts.tar.gz && tar xf tracked.tar.gz
    - uses: git-for-windows/setup-git-for-windows-sdk@v1
    - name: Download busybox.exe
      if: matrix.use-busybox == true
      shell: bash
      run: |
        curl -Lo /tmp/busybox.zip \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" \
          https://api.github.com/repos/dscho/busybox-w32/actions/artifacts/362493212/zip &&
        cd /c/git-sdk-64-minimal/mingw64/bin &&
        unzip -o /tmp/busybox.zip &&
        ln busybox.exe ash.exe &&
        echo "GIT_TEST_SHELL_PATH=$(cygpath -aw /mingw64/bin/ash.exe)" >>$GITHUB_ENV &&
        echo "SHELL=$(cygpath -aw /mingw64/bin/ash.exe)" >>$GITHUB_ENV &&
        echo "SHELL_PATH=$(cygpath -aw /mingw64/bin/ash.exe)" >>GIT-BUILD-OPTIONS &&
        echo "TEST_SHELL_PATH=$(cygpath -aw /mingw64/bin/ash.exe)" >>GIT-BUILD-OPTIONS &&
        ln busybox.exe bash.exe &&
        echo "PATH='$(cygpath -amp "$(sed -n "s/.*PATH=//p" <../../etc/profile)")'" >>../../etc/profile &&
        printf '#include <stdio.h>\n#include <stdlib.h>\nint main(int argc, char **argv) { int i; fprintf(stderr, "Tried to run `%%s` with %%d arguments\\n", argv[0], argc - 1); for (i = 1; i < argc; i++) fprintf(stderr, "arg #%%d: `%%s`\\n", i, argv[i]); exit(127); }\n' >not-found.c &&
        cat not-found.c &&
        gcc -o sh.exe not-found.c &&
        ln -f sh.exe ../../usr/bin/sh.exe
    - name: test
      shell: bash
      run: . /etc/profile && ci/run-test-slice.sh ${{matrix.nr}} 10
    - name: print test failures
      if: failure() && env.FAILED_TEST_ARTIFACTS != ''
      shell: bash
      run: ci/print-test-failures.sh
    - name: Upload failed tests' directories
      if: failure() && env.FAILED_TEST_ARTIFACTS != ''
      uses: actions/upload-artifact@v2
      with:
        name: failed-tests-windows
        path: ${{env.FAILED_TEST_ARTIFACTS}}
