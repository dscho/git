name: CI

on: [push, pull_request]

env:
  DEVELOPER: 1

# If more than one workflow run is triggered for the very same commit hash
# (which happens when multiple branches pointing to the same commit), only
# the first one is allowed to run, the second will be kept in the "queued"
# state. This allows a successful completion of the first run to be reused
# in the second run via the `skip-if-redundant` logic in the `config` job.
#
# The only caveat is that if a workflow run is triggered for the same commit
# hash that another run is already being held, that latter run will be
# canceled. For more details about the `concurrency` attribute, see:
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.sha }}

jobs:
  dockerized:
    name: ${{matrix.vector.jobname}} (${{matrix.vector.image}})
    concurrency:
      group: dockerized-${{ matrix.vector.jobname }}-${{ matrix.vector.image }}-${{ github.ref }}
    strategy:
      fail-fast: false
      matrix:
        vector:
        - jobname: linux-musl
          image: alpine
          distro: alpine-latest
        - jobname: linux32
          image: i386/ubuntu:focal
          distro: ubuntu32-20.04
        - jobname: pedantic
          image: fedora
          distro: fedora-latest
    env:
      jobname: ${{matrix.vector.jobname}}
      distro: ${{matrix.vector.distro}}
    runs-on: ubuntu-latest
    container: ${{matrix.vector.image}}
    steps:
    - name: dump info
      run: |
        file /__e/node20/bin/node
        ls -l /__e/node20/bin/node
    - name: prepare libc6 for actions
      if: matrix.vector.jobname == 'linux32'
      run: apt -q update && apt -q -y install libc6-amd64 lib64stdc++6 file
    - name: dump info
      run: |
        file /__e/node20/bin/node
        ls -l /__e/node20/bin/node
    - uses: actions/checkout@v4
    # - run: ci/install-dependencies.sh
    # - run: ci/run-build-and-tests.sh
    - name: let it fail
      run: echo FAILED_TEST_ARTIFACTS=ci >>$GITHUB_ENV && exit 1
    # - name: print test failures
    #   if: failure() && env.FAILED_TEST_ARTIFACTS != ''
    #   run: ci/print-test-failures.sh
    - name: Upload failed tests' directories
      if: failure() && env.FAILED_TEST_ARTIFACTS != ''
      uses: actions/upload-artifact@v4
      with:
        name: failed-tests-${{matrix.vector.jobname}}
        path: ${{env.FAILED_TEST_ARTIFACTS}}
